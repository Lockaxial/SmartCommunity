package com.smartcommunity.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class MeterExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table meter
     *
     * @mbggenerated Sat Jan 24 16:00:04 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table meter
     *
     * @mbggenerated Sat Jan 24 16:00:04 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table meter
     *
     * @mbggenerated Sat Jan 24 16:00:04 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meter
     *
     * @mbggenerated Sat Jan 24 16:00:04 CST 2015
     */
    public MeterExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meter
     *
     * @mbggenerated Sat Jan 24 16:00:04 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meter
     *
     * @mbggenerated Sat Jan 24 16:00:04 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meter
     *
     * @mbggenerated Sat Jan 24 16:00:04 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meter
     *
     * @mbggenerated Sat Jan 24 16:00:04 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meter
     *
     * @mbggenerated Sat Jan 24 16:00:04 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meter
     *
     * @mbggenerated Sat Jan 24 16:00:04 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meter
     *
     * @mbggenerated Sat Jan 24 16:00:04 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meter
     *
     * @mbggenerated Sat Jan 24 16:00:04 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meter
     *
     * @mbggenerated Sat Jan 24 16:00:04 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table meter
     *
     * @mbggenerated Sat Jan 24 16:00:04 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table meter
     *
     * @mbggenerated Sat Jan 24 16:00:04 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andRoomnumberIsNull() {
            addCriterion("roomnumber is null");
            return (Criteria) this;
        }

        public Criteria andRoomnumberIsNotNull() {
            addCriterion("roomnumber is not null");
            return (Criteria) this;
        }

        public Criteria andRoomnumberEqualTo(String value) {
            addCriterion("roomnumber =", value, "roomnumber");
            return (Criteria) this;
        }

        public Criteria andRoomnumberNotEqualTo(String value) {
            addCriterion("roomnumber <>", value, "roomnumber");
            return (Criteria) this;
        }

        public Criteria andRoomnumberGreaterThan(String value) {
            addCriterion("roomnumber >", value, "roomnumber");
            return (Criteria) this;
        }

        public Criteria andRoomnumberGreaterThanOrEqualTo(String value) {
            addCriterion("roomnumber >=", value, "roomnumber");
            return (Criteria) this;
        }

        public Criteria andRoomnumberLessThan(String value) {
            addCriterion("roomnumber <", value, "roomnumber");
            return (Criteria) this;
        }

        public Criteria andRoomnumberLessThanOrEqualTo(String value) {
            addCriterion("roomnumber <=", value, "roomnumber");
            return (Criteria) this;
        }

        public Criteria andRoomnumberLike(String value) {
            addCriterion("roomnumber like", value, "roomnumber");
            return (Criteria) this;
        }

        public Criteria andRoomnumberNotLike(String value) {
            addCriterion("roomnumber not like", value, "roomnumber");
            return (Criteria) this;
        }

        public Criteria andRoomnumberIn(List<String> values) {
            addCriterion("roomnumber in", values, "roomnumber");
            return (Criteria) this;
        }

        public Criteria andRoomnumberNotIn(List<String> values) {
            addCriterion("roomnumber not in", values, "roomnumber");
            return (Criteria) this;
        }

        public Criteria andRoomnumberBetween(String value1, String value2) {
            addCriterion("roomnumber between", value1, value2, "roomnumber");
            return (Criteria) this;
        }

        public Criteria andRoomnumberNotBetween(String value1, String value2) {
            addCriterion("roomnumber not between", value1, value2, "roomnumber");
            return (Criteria) this;
        }

        public Criteria andMetertypeIsNull() {
            addCriterion("metertype is null");
            return (Criteria) this;
        }

        public Criteria andMetertypeIsNotNull() {
            addCriterion("metertype is not null");
            return (Criteria) this;
        }

        public Criteria andMetertypeEqualTo(Integer value) {
            addCriterion("metertype =", value, "metertype");
            return (Criteria) this;
        }

        public Criteria andMetertypeNotEqualTo(Integer value) {
            addCriterion("metertype <>", value, "metertype");
            return (Criteria) this;
        }

        public Criteria andMetertypeGreaterThan(Integer value) {
            addCriterion("metertype >", value, "metertype");
            return (Criteria) this;
        }

        public Criteria andMetertypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("metertype >=", value, "metertype");
            return (Criteria) this;
        }

        public Criteria andMetertypeLessThan(Integer value) {
            addCriterion("metertype <", value, "metertype");
            return (Criteria) this;
        }

        public Criteria andMetertypeLessThanOrEqualTo(Integer value) {
            addCriterion("metertype <=", value, "metertype");
            return (Criteria) this;
        }

        public Criteria andMetertypeIn(List<Integer> values) {
            addCriterion("metertype in", values, "metertype");
            return (Criteria) this;
        }

        public Criteria andMetertypeNotIn(List<Integer> values) {
            addCriterion("metertype not in", values, "metertype");
            return (Criteria) this;
        }

        public Criteria andMetertypeBetween(Integer value1, Integer value2) {
            addCriterion("metertype between", value1, value2, "metertype");
            return (Criteria) this;
        }

        public Criteria andMetertypeNotBetween(Integer value1, Integer value2) {
            addCriterion("metertype not between", value1, value2, "metertype");
            return (Criteria) this;
        }

        public Criteria andMeternumberIsNull() {
            addCriterion("meternumber is null");
            return (Criteria) this;
        }

        public Criteria andMeternumberIsNotNull() {
            addCriterion("meternumber is not null");
            return (Criteria) this;
        }

        public Criteria andMeternumberEqualTo(String value) {
            addCriterion("meternumber =", value, "meternumber");
            return (Criteria) this;
        }

        public Criteria andMeternumberNotEqualTo(String value) {
            addCriterion("meternumber <>", value, "meternumber");
            return (Criteria) this;
        }

        public Criteria andMeternumberGreaterThan(String value) {
            addCriterion("meternumber >", value, "meternumber");
            return (Criteria) this;
        }

        public Criteria andMeternumberGreaterThanOrEqualTo(String value) {
            addCriterion("meternumber >=", value, "meternumber");
            return (Criteria) this;
        }

        public Criteria andMeternumberLessThan(String value) {
            addCriterion("meternumber <", value, "meternumber");
            return (Criteria) this;
        }

        public Criteria andMeternumberLessThanOrEqualTo(String value) {
            addCriterion("meternumber <=", value, "meternumber");
            return (Criteria) this;
        }

        public Criteria andMeternumberLike(String value) {
            addCriterion("meternumber like", value, "meternumber");
            return (Criteria) this;
        }

        public Criteria andMeternumberNotLike(String value) {
            addCriterion("meternumber not like", value, "meternumber");
            return (Criteria) this;
        }

        public Criteria andMeternumberIn(List<String> values) {
            addCriterion("meternumber in", values, "meternumber");
            return (Criteria) this;
        }

        public Criteria andMeternumberNotIn(List<String> values) {
            addCriterion("meternumber not in", values, "meternumber");
            return (Criteria) this;
        }

        public Criteria andMeternumberBetween(String value1, String value2) {
            addCriterion("meternumber between", value1, value2, "meternumber");
            return (Criteria) this;
        }

        public Criteria andMeternumberNotBetween(String value1, String value2) {
            addCriterion("meternumber not between", value1, value2, "meternumber");
            return (Criteria) this;
        }

        public Criteria andReadmanIsNull() {
            addCriterion("readman is null");
            return (Criteria) this;
        }

        public Criteria andReadmanIsNotNull() {
            addCriterion("readman is not null");
            return (Criteria) this;
        }

        public Criteria andReadmanEqualTo(String value) {
            addCriterion("readman =", value, "readman");
            return (Criteria) this;
        }

        public Criteria andReadmanNotEqualTo(String value) {
            addCriterion("readman <>", value, "readman");
            return (Criteria) this;
        }

        public Criteria andReadmanGreaterThan(String value) {
            addCriterion("readman >", value, "readman");
            return (Criteria) this;
        }

        public Criteria andReadmanGreaterThanOrEqualTo(String value) {
            addCriterion("readman >=", value, "readman");
            return (Criteria) this;
        }

        public Criteria andReadmanLessThan(String value) {
            addCriterion("readman <", value, "readman");
            return (Criteria) this;
        }

        public Criteria andReadmanLessThanOrEqualTo(String value) {
            addCriterion("readman <=", value, "readman");
            return (Criteria) this;
        }

        public Criteria andReadmanLike(String value) {
            addCriterion("readman like", value, "readman");
            return (Criteria) this;
        }

        public Criteria andReadmanNotLike(String value) {
            addCriterion("readman not like", value, "readman");
            return (Criteria) this;
        }

        public Criteria andReadmanIn(List<String> values) {
            addCriterion("readman in", values, "readman");
            return (Criteria) this;
        }

        public Criteria andReadmanNotIn(List<String> values) {
            addCriterion("readman not in", values, "readman");
            return (Criteria) this;
        }

        public Criteria andReadmanBetween(String value1, String value2) {
            addCriterion("readman between", value1, value2, "readman");
            return (Criteria) this;
        }

        public Criteria andReadmanNotBetween(String value1, String value2) {
            addCriterion("readman not between", value1, value2, "readman");
            return (Criteria) this;
        }

        public Criteria andReaddataIsNull() {
            addCriterion("readdata is null");
            return (Criteria) this;
        }

        public Criteria andReaddataIsNotNull() {
            addCriterion("readdata is not null");
            return (Criteria) this;
        }

        public Criteria andReaddataEqualTo(Float value) {
            addCriterion("readdata =", value, "readdata");
            return (Criteria) this;
        }

        public Criteria andReaddataNotEqualTo(Float value) {
            addCriterion("readdata <>", value, "readdata");
            return (Criteria) this;
        }

        public Criteria andReaddataGreaterThan(Float value) {
            addCriterion("readdata >", value, "readdata");
            return (Criteria) this;
        }

        public Criteria andReaddataGreaterThanOrEqualTo(Float value) {
            addCriterion("readdata >=", value, "readdata");
            return (Criteria) this;
        }

        public Criteria andReaddataLessThan(Float value) {
            addCriterion("readdata <", value, "readdata");
            return (Criteria) this;
        }

        public Criteria andReaddataLessThanOrEqualTo(Float value) {
            addCriterion("readdata <=", value, "readdata");
            return (Criteria) this;
        }

        public Criteria andReaddataIn(List<Float> values) {
            addCriterion("readdata in", values, "readdata");
            return (Criteria) this;
        }

        public Criteria andReaddataNotIn(List<Float> values) {
            addCriterion("readdata not in", values, "readdata");
            return (Criteria) this;
        }

        public Criteria andReaddataBetween(Float value1, Float value2) {
            addCriterion("readdata between", value1, value2, "readdata");
            return (Criteria) this;
        }

        public Criteria andReaddataNotBetween(Float value1, Float value2) {
            addCriterion("readdata not between", value1, value2, "readdata");
            return (Criteria) this;
        }

        public Criteria andConsumedataIsNull() {
            addCriterion("consumedata is null");
            return (Criteria) this;
        }

        public Criteria andConsumedataIsNotNull() {
            addCriterion("consumedata is not null");
            return (Criteria) this;
        }

        public Criteria andConsumedataEqualTo(Float value) {
            addCriterion("consumedata =", value, "consumedata");
            return (Criteria) this;
        }

        public Criteria andConsumedataNotEqualTo(Float value) {
            addCriterion("consumedata <>", value, "consumedata");
            return (Criteria) this;
        }

        public Criteria andConsumedataGreaterThan(Float value) {
            addCriterion("consumedata >", value, "consumedata");
            return (Criteria) this;
        }

        public Criteria andConsumedataGreaterThanOrEqualTo(Float value) {
            addCriterion("consumedata >=", value, "consumedata");
            return (Criteria) this;
        }

        public Criteria andConsumedataLessThan(Float value) {
            addCriterion("consumedata <", value, "consumedata");
            return (Criteria) this;
        }

        public Criteria andConsumedataLessThanOrEqualTo(Float value) {
            addCriterion("consumedata <=", value, "consumedata");
            return (Criteria) this;
        }

        public Criteria andConsumedataIn(List<Float> values) {
            addCriterion("consumedata in", values, "consumedata");
            return (Criteria) this;
        }

        public Criteria andConsumedataNotIn(List<Float> values) {
            addCriterion("consumedata not in", values, "consumedata");
            return (Criteria) this;
        }

        public Criteria andConsumedataBetween(Float value1, Float value2) {
            addCriterion("consumedata between", value1, value2, "consumedata");
            return (Criteria) this;
        }

        public Criteria andConsumedataNotBetween(Float value1, Float value2) {
            addCriterion("consumedata not between", value1, value2, "consumedata");
            return (Criteria) this;
        }

        public Criteria andReadingtimeIsNull() {
            addCriterion("readingtime is null");
            return (Criteria) this;
        }

        public Criteria andReadingtimeIsNotNull() {
            addCriterion("readingtime is not null");
            return (Criteria) this;
        }

        public Criteria andReadingtimeEqualTo(Date value) {
            addCriterionForJDBCDate("readingtime =", value, "readingtime");
            return (Criteria) this;
        }

        public Criteria andReadingtimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("readingtime <>", value, "readingtime");
            return (Criteria) this;
        }

        public Criteria andReadingtimeGreaterThan(Date value) {
            addCriterionForJDBCDate("readingtime >", value, "readingtime");
            return (Criteria) this;
        }

        public Criteria andReadingtimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("readingtime >=", value, "readingtime");
            return (Criteria) this;
        }

        public Criteria andReadingtimeLessThan(Date value) {
            addCriterionForJDBCDate("readingtime <", value, "readingtime");
            return (Criteria) this;
        }

        public Criteria andReadingtimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("readingtime <=", value, "readingtime");
            return (Criteria) this;
        }

        public Criteria andReadingtimeIn(List<Date> values) {
            addCriterionForJDBCDate("readingtime in", values, "readingtime");
            return (Criteria) this;
        }

        public Criteria andReadingtimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("readingtime not in", values, "readingtime");
            return (Criteria) this;
        }

        public Criteria andReadingtimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("readingtime between", value1, value2, "readingtime");
            return (Criteria) this;
        }

        public Criteria andReadingtimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("readingtime not between", value1, value2, "readingtime");
            return (Criteria) this;
        }

        public Criteria andUnitepriceIsNull() {
            addCriterion("uniteprice is null");
            return (Criteria) this;
        }

        public Criteria andUnitepriceIsNotNull() {
            addCriterion("uniteprice is not null");
            return (Criteria) this;
        }

        public Criteria andUnitepriceEqualTo(Float value) {
            addCriterion("uniteprice =", value, "uniteprice");
            return (Criteria) this;
        }

        public Criteria andUnitepriceNotEqualTo(Float value) {
            addCriterion("uniteprice <>", value, "uniteprice");
            return (Criteria) this;
        }

        public Criteria andUnitepriceGreaterThan(Float value) {
            addCriterion("uniteprice >", value, "uniteprice");
            return (Criteria) this;
        }

        public Criteria andUnitepriceGreaterThanOrEqualTo(Float value) {
            addCriterion("uniteprice >=", value, "uniteprice");
            return (Criteria) this;
        }

        public Criteria andUnitepriceLessThan(Float value) {
            addCriterion("uniteprice <", value, "uniteprice");
            return (Criteria) this;
        }

        public Criteria andUnitepriceLessThanOrEqualTo(Float value) {
            addCriterion("uniteprice <=", value, "uniteprice");
            return (Criteria) this;
        }

        public Criteria andUnitepriceIn(List<Float> values) {
            addCriterion("uniteprice in", values, "uniteprice");
            return (Criteria) this;
        }

        public Criteria andUnitepriceNotIn(List<Float> values) {
            addCriterion("uniteprice not in", values, "uniteprice");
            return (Criteria) this;
        }

        public Criteria andUnitepriceBetween(Float value1, Float value2) {
            addCriterion("uniteprice between", value1, value2, "uniteprice");
            return (Criteria) this;
        }

        public Criteria andUnitepriceNotBetween(Float value1, Float value2) {
            addCriterion("uniteprice not between", value1, value2, "uniteprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceIsNull() {
            addCriterion("totalprice is null");
            return (Criteria) this;
        }

        public Criteria andTotalpriceIsNotNull() {
            addCriterion("totalprice is not null");
            return (Criteria) this;
        }

        public Criteria andTotalpriceEqualTo(Float value) {
            addCriterion("totalprice =", value, "totalprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceNotEqualTo(Float value) {
            addCriterion("totalprice <>", value, "totalprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceGreaterThan(Float value) {
            addCriterion("totalprice >", value, "totalprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceGreaterThanOrEqualTo(Float value) {
            addCriterion("totalprice >=", value, "totalprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceLessThan(Float value) {
            addCriterion("totalprice <", value, "totalprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceLessThanOrEqualTo(Float value) {
            addCriterion("totalprice <=", value, "totalprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceIn(List<Float> values) {
            addCriterion("totalprice in", values, "totalprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceNotIn(List<Float> values) {
            addCriterion("totalprice not in", values, "totalprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceBetween(Float value1, Float value2) {
            addCriterion("totalprice between", value1, value2, "totalprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceNotBetween(Float value1, Float value2) {
            addCriterion("totalprice not between", value1, value2, "totalprice");
            return (Criteria) this;
        }

        public Criteria andVersionIsNull() {
            addCriterion("version is null");
            return (Criteria) this;
        }

        public Criteria andVersionIsNotNull() {
            addCriterion("version is not null");
            return (Criteria) this;
        }

        public Criteria andVersionEqualTo(Integer value) {
            addCriterion("version =", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotEqualTo(Integer value) {
            addCriterion("version <>", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThan(Integer value) {
            addCriterion("version >", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThanOrEqualTo(Integer value) {
            addCriterion("version >=", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionLessThan(Integer value) {
            addCriterion("version <", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionLessThanOrEqualTo(Integer value) {
            addCriterion("version <=", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionIn(List<Integer> values) {
            addCriterion("version in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotIn(List<Integer> values) {
            addCriterion("version not in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionBetween(Integer value1, Integer value2) {
            addCriterion("version between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotBetween(Integer value1, Integer value2) {
            addCriterion("version not between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andStateIsNull() {
            addCriterion("state is null");
            return (Criteria) this;
        }

        public Criteria andStateIsNotNull() {
            addCriterion("state is not null");
            return (Criteria) this;
        }

        public Criteria andStateEqualTo(Boolean value) {
            addCriterion("state =", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotEqualTo(Boolean value) {
            addCriterion("state <>", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateGreaterThan(Boolean value) {
            addCriterion("state >", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateGreaterThanOrEqualTo(Boolean value) {
            addCriterion("state >=", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLessThan(Boolean value) {
            addCriterion("state <", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLessThanOrEqualTo(Boolean value) {
            addCriterion("state <=", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateIn(List<Boolean> values) {
            addCriterion("state in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotIn(List<Boolean> values) {
            addCriterion("state not in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateBetween(Boolean value1, Boolean value2) {
            addCriterion("state between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotBetween(Boolean value1, Boolean value2) {
            addCriterion("state not between", value1, value2, "state");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table meter
     *
     * @mbggenerated do_not_delete_during_merge Sat Jan 24 16:00:04 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table meter
     *
     * @mbggenerated Sat Jan 24 16:00:04 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
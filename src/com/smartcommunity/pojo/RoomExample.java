package com.smartcommunity.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RoomExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table room
     *
     * @mbggenerated Tue Jan 13 16:05:47 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table room
     *
     * @mbggenerated Tue Jan 13 16:05:47 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table room
     *
     * @mbggenerated Tue Jan 13 16:05:47 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Tue Jan 13 16:05:47 CST 2015
     */
    public RoomExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Tue Jan 13 16:05:47 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Tue Jan 13 16:05:47 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Tue Jan 13 16:05:47 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Tue Jan 13 16:05:47 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Tue Jan 13 16:05:47 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Tue Jan 13 16:05:47 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Tue Jan 13 16:05:47 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Tue Jan 13 16:05:47 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Tue Jan 13 16:05:47 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbggenerated Tue Jan 13 16:05:47 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table room
     *
     * @mbggenerated Tue Jan 13 16:05:47 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andBuildingnumberIsNull() {
            addCriterion("buildingnumber is null");
            return (Criteria) this;
        }

        public Criteria andBuildingnumberIsNotNull() {
            addCriterion("buildingnumber is not null");
            return (Criteria) this;
        }

        public Criteria andBuildingnumberEqualTo(String value) {
            addCriterion("buildingnumber =", value, "buildingnumber");
            return (Criteria) this;
        }

        public Criteria andBuildingnumberNotEqualTo(String value) {
            addCriterion("buildingnumber <>", value, "buildingnumber");
            return (Criteria) this;
        }

        public Criteria andBuildingnumberGreaterThan(String value) {
            addCriterion("buildingnumber >", value, "buildingnumber");
            return (Criteria) this;
        }

        public Criteria andBuildingnumberGreaterThanOrEqualTo(String value) {
            addCriterion("buildingnumber >=", value, "buildingnumber");
            return (Criteria) this;
        }

        public Criteria andBuildingnumberLessThan(String value) {
            addCriterion("buildingnumber <", value, "buildingnumber");
            return (Criteria) this;
        }

        public Criteria andBuildingnumberLessThanOrEqualTo(String value) {
            addCriterion("buildingnumber <=", value, "buildingnumber");
            return (Criteria) this;
        }

        public Criteria andBuildingnumberLike(String value) {
            addCriterion("buildingnumber like", value, "buildingnumber");
            return (Criteria) this;
        }

        public Criteria andBuildingnumberNotLike(String value) {
            addCriterion("buildingnumber not like", value, "buildingnumber");
            return (Criteria) this;
        }

        public Criteria andBuildingnumberIn(List<String> values) {
            addCriterion("buildingnumber in", values, "buildingnumber");
            return (Criteria) this;
        }

        public Criteria andBuildingnumberNotIn(List<String> values) {
            addCriterion("buildingnumber not in", values, "buildingnumber");
            return (Criteria) this;
        }

        public Criteria andBuildingnumberBetween(String value1, String value2) {
            addCriterion("buildingnumber between", value1, value2, "buildingnumber");
            return (Criteria) this;
        }

        public Criteria andBuildingnumberNotBetween(String value1, String value2) {
            addCriterion("buildingnumber not between", value1, value2, "buildingnumber");
            return (Criteria) this;
        }

        public Criteria andNumberIsNull() {
            addCriterion("number is null");
            return (Criteria) this;
        }

        public Criteria andNumberIsNotNull() {
            addCriterion("number is not null");
            return (Criteria) this;
        }

        public Criteria andNumberEqualTo(String value) {
            addCriterion("number =", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberNotEqualTo(String value) {
            addCriterion("number <>", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberGreaterThan(String value) {
            addCriterion("number >", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberGreaterThanOrEqualTo(String value) {
            addCriterion("number >=", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberLessThan(String value) {
            addCriterion("number <", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberLessThanOrEqualTo(String value) {
            addCriterion("number <=", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberLike(String value) {
            addCriterion("number like", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberNotLike(String value) {
            addCriterion("number not like", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberIn(List<String> values) {
            addCriterion("number in", values, "number");
            return (Criteria) this;
        }

        public Criteria andNumberNotIn(List<String> values) {
            addCriterion("number not in", values, "number");
            return (Criteria) this;
        }

        public Criteria andNumberBetween(String value1, String value2) {
            addCriterion("number between", value1, value2, "number");
            return (Criteria) this;
        }

        public Criteria andNumberNotBetween(String value1, String value2) {
            addCriterion("number not between", value1, value2, "number");
            return (Criteria) this;
        }

        public Criteria andUserIsNull() {
            addCriterion("user is null");
            return (Criteria) this;
        }

        public Criteria andUserIsNotNull() {
            addCriterion("user is not null");
            return (Criteria) this;
        }

        public Criteria andUserEqualTo(Integer value) {
            addCriterion("user =", value, "user");
            return (Criteria) this;
        }

        public Criteria andUserNotEqualTo(Integer value) {
            addCriterion("user <>", value, "user");
            return (Criteria) this;
        }

        public Criteria andUserGreaterThan(Integer value) {
            addCriterion("user >", value, "user");
            return (Criteria) this;
        }

        public Criteria andUserGreaterThanOrEqualTo(Integer value) {
            addCriterion("user >=", value, "user");
            return (Criteria) this;
        }

        public Criteria andUserLessThan(Integer value) {
            addCriterion("user <", value, "user");
            return (Criteria) this;
        }

        public Criteria andUserLessThanOrEqualTo(Integer value) {
            addCriterion("user <=", value, "user");
            return (Criteria) this;
        }

        public Criteria andUserIn(List<Integer> values) {
            addCriterion("user in", values, "user");
            return (Criteria) this;
        }

        public Criteria andUserNotIn(List<Integer> values) {
            addCriterion("user not in", values, "user");
            return (Criteria) this;
        }

        public Criteria andUserBetween(Integer value1, Integer value2) {
            addCriterion("user between", value1, value2, "user");
            return (Criteria) this;
        }

        public Criteria andUserNotBetween(Integer value1, Integer value2) {
            addCriterion("user not between", value1, value2, "user");
            return (Criteria) this;
        }

        public Criteria andBuildingareaIsNull() {
            addCriterion("buildingarea is null");
            return (Criteria) this;
        }

        public Criteria andBuildingareaIsNotNull() {
            addCriterion("buildingarea is not null");
            return (Criteria) this;
        }

        public Criteria andBuildingareaEqualTo(Float value) {
            addCriterion("buildingarea =", value, "buildingarea");
            return (Criteria) this;
        }

        public Criteria andBuildingareaNotEqualTo(Float value) {
            addCriterion("buildingarea <>", value, "buildingarea");
            return (Criteria) this;
        }

        public Criteria andBuildingareaGreaterThan(Float value) {
            addCriterion("buildingarea >", value, "buildingarea");
            return (Criteria) this;
        }

        public Criteria andBuildingareaGreaterThanOrEqualTo(Float value) {
            addCriterion("buildingarea >=", value, "buildingarea");
            return (Criteria) this;
        }

        public Criteria andBuildingareaLessThan(Float value) {
            addCriterion("buildingarea <", value, "buildingarea");
            return (Criteria) this;
        }

        public Criteria andBuildingareaLessThanOrEqualTo(Float value) {
            addCriterion("buildingarea <=", value, "buildingarea");
            return (Criteria) this;
        }

        public Criteria andBuildingareaIn(List<Float> values) {
            addCriterion("buildingarea in", values, "buildingarea");
            return (Criteria) this;
        }

        public Criteria andBuildingareaNotIn(List<Float> values) {
            addCriterion("buildingarea not in", values, "buildingarea");
            return (Criteria) this;
        }

        public Criteria andBuildingareaBetween(Float value1, Float value2) {
            addCriterion("buildingarea between", value1, value2, "buildingarea");
            return (Criteria) this;
        }

        public Criteria andBuildingareaNotBetween(Float value1, Float value2) {
            addCriterion("buildingarea not between", value1, value2, "buildingarea");
            return (Criteria) this;
        }

        public Criteria andInnerareaIsNull() {
            addCriterion("innerarea is null");
            return (Criteria) this;
        }

        public Criteria andInnerareaIsNotNull() {
            addCriterion("innerarea is not null");
            return (Criteria) this;
        }

        public Criteria andInnerareaEqualTo(Float value) {
            addCriterion("innerarea =", value, "innerarea");
            return (Criteria) this;
        }

        public Criteria andInnerareaNotEqualTo(Float value) {
            addCriterion("innerarea <>", value, "innerarea");
            return (Criteria) this;
        }

        public Criteria andInnerareaGreaterThan(Float value) {
            addCriterion("innerarea >", value, "innerarea");
            return (Criteria) this;
        }

        public Criteria andInnerareaGreaterThanOrEqualTo(Float value) {
            addCriterion("innerarea >=", value, "innerarea");
            return (Criteria) this;
        }

        public Criteria andInnerareaLessThan(Float value) {
            addCriterion("innerarea <", value, "innerarea");
            return (Criteria) this;
        }

        public Criteria andInnerareaLessThanOrEqualTo(Float value) {
            addCriterion("innerarea <=", value, "innerarea");
            return (Criteria) this;
        }

        public Criteria andInnerareaIn(List<Float> values) {
            addCriterion("innerarea in", values, "innerarea");
            return (Criteria) this;
        }

        public Criteria andInnerareaNotIn(List<Float> values) {
            addCriterion("innerarea not in", values, "innerarea");
            return (Criteria) this;
        }

        public Criteria andInnerareaBetween(Float value1, Float value2) {
            addCriterion("innerarea between", value1, value2, "innerarea");
            return (Criteria) this;
        }

        public Criteria andInnerareaNotBetween(Float value1, Float value2) {
            addCriterion("innerarea not between", value1, value2, "innerarea");
            return (Criteria) this;
        }

        public Criteria andPublicareaIsNull() {
            addCriterion("publicarea is null");
            return (Criteria) this;
        }

        public Criteria andPublicareaIsNotNull() {
            addCriterion("publicarea is not null");
            return (Criteria) this;
        }

        public Criteria andPublicareaEqualTo(Float value) {
            addCriterion("publicarea =", value, "publicarea");
            return (Criteria) this;
        }

        public Criteria andPublicareaNotEqualTo(Float value) {
            addCriterion("publicarea <>", value, "publicarea");
            return (Criteria) this;
        }

        public Criteria andPublicareaGreaterThan(Float value) {
            addCriterion("publicarea >", value, "publicarea");
            return (Criteria) this;
        }

        public Criteria andPublicareaGreaterThanOrEqualTo(Float value) {
            addCriterion("publicarea >=", value, "publicarea");
            return (Criteria) this;
        }

        public Criteria andPublicareaLessThan(Float value) {
            addCriterion("publicarea <", value, "publicarea");
            return (Criteria) this;
        }

        public Criteria andPublicareaLessThanOrEqualTo(Float value) {
            addCriterion("publicarea <=", value, "publicarea");
            return (Criteria) this;
        }

        public Criteria andPublicareaIn(List<Float> values) {
            addCriterion("publicarea in", values, "publicarea");
            return (Criteria) this;
        }

        public Criteria andPublicareaNotIn(List<Float> values) {
            addCriterion("publicarea not in", values, "publicarea");
            return (Criteria) this;
        }

        public Criteria andPublicareaBetween(Float value1, Float value2) {
            addCriterion("publicarea between", value1, value2, "publicarea");
            return (Criteria) this;
        }

        public Criteria andPublicareaNotBetween(Float value1, Float value2) {
            addCriterion("publicarea not between", value1, value2, "publicarea");
            return (Criteria) this;
        }

        public Criteria andStateIsNull() {
            addCriterion("state is null");
            return (Criteria) this;
        }

        public Criteria andStateIsNotNull() {
            addCriterion("state is not null");
            return (Criteria) this;
        }

        public Criteria andStateEqualTo(String value) {
            addCriterion("state =", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotEqualTo(String value) {
            addCriterion("state <>", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateGreaterThan(String value) {
            addCriterion("state >", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateGreaterThanOrEqualTo(String value) {
            addCriterion("state >=", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLessThan(String value) {
            addCriterion("state <", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLessThanOrEqualTo(String value) {
            addCriterion("state <=", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLike(String value) {
            addCriterion("state like", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotLike(String value) {
            addCriterion("state not like", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateIn(List<String> values) {
            addCriterion("state in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotIn(List<String> values) {
            addCriterion("state not in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateBetween(String value1, String value2) {
            addCriterion("state between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotBetween(String value1, String value2) {
            addCriterion("state not between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(String value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(String value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(String value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(String value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(String value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(String value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLike(String value) {
            addCriterion("type like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotLike(String value) {
            addCriterion("type not like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<String> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<String> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(String value1, String value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(String value1, String value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andFloorIsNull() {
            addCriterion("floor is null");
            return (Criteria) this;
        }

        public Criteria andFloorIsNotNull() {
            addCriterion("floor is not null");
            return (Criteria) this;
        }

        public Criteria andFloorEqualTo(Integer value) {
            addCriterion("floor =", value, "floor");
            return (Criteria) this;
        }

        public Criteria andFloorNotEqualTo(Integer value) {
            addCriterion("floor <>", value, "floor");
            return (Criteria) this;
        }

        public Criteria andFloorGreaterThan(Integer value) {
            addCriterion("floor >", value, "floor");
            return (Criteria) this;
        }

        public Criteria andFloorGreaterThanOrEqualTo(Integer value) {
            addCriterion("floor >=", value, "floor");
            return (Criteria) this;
        }

        public Criteria andFloorLessThan(Integer value) {
            addCriterion("floor <", value, "floor");
            return (Criteria) this;
        }

        public Criteria andFloorLessThanOrEqualTo(Integer value) {
            addCriterion("floor <=", value, "floor");
            return (Criteria) this;
        }

        public Criteria andFloorIn(List<Integer> values) {
            addCriterion("floor in", values, "floor");
            return (Criteria) this;
        }

        public Criteria andFloorNotIn(List<Integer> values) {
            addCriterion("floor not in", values, "floor");
            return (Criteria) this;
        }

        public Criteria andFloorBetween(Integer value1, Integer value2) {
            addCriterion("floor between", value1, value2, "floor");
            return (Criteria) this;
        }

        public Criteria andFloorNotBetween(Integer value1, Integer value2) {
            addCriterion("floor not between", value1, value2, "floor");
            return (Criteria) this;
        }

        public Criteria andTargetgroupIsNull() {
            addCriterion("targetgroup is null");
            return (Criteria) this;
        }

        public Criteria andTargetgroupIsNotNull() {
            addCriterion("targetgroup is not null");
            return (Criteria) this;
        }

        public Criteria andTargetgroupEqualTo(String value) {
            addCriterion("targetgroup =", value, "targetgroup");
            return (Criteria) this;
        }

        public Criteria andTargetgroupNotEqualTo(String value) {
            addCriterion("targetgroup <>", value, "targetgroup");
            return (Criteria) this;
        }

        public Criteria andTargetgroupGreaterThan(String value) {
            addCriterion("targetgroup >", value, "targetgroup");
            return (Criteria) this;
        }

        public Criteria andTargetgroupGreaterThanOrEqualTo(String value) {
            addCriterion("targetgroup >=", value, "targetgroup");
            return (Criteria) this;
        }

        public Criteria andTargetgroupLessThan(String value) {
            addCriterion("targetgroup <", value, "targetgroup");
            return (Criteria) this;
        }

        public Criteria andTargetgroupLessThanOrEqualTo(String value) {
            addCriterion("targetgroup <=", value, "targetgroup");
            return (Criteria) this;
        }

        public Criteria andTargetgroupLike(String value) {
            addCriterion("targetgroup like", value, "targetgroup");
            return (Criteria) this;
        }

        public Criteria andTargetgroupNotLike(String value) {
            addCriterion("targetgroup not like", value, "targetgroup");
            return (Criteria) this;
        }

        public Criteria andTargetgroupIn(List<String> values) {
            addCriterion("targetgroup in", values, "targetgroup");
            return (Criteria) this;
        }

        public Criteria andTargetgroupNotIn(List<String> values) {
            addCriterion("targetgroup not in", values, "targetgroup");
            return (Criteria) this;
        }

        public Criteria andTargetgroupBetween(String value1, String value2) {
            addCriterion("targetgroup between", value1, value2, "targetgroup");
            return (Criteria) this;
        }

        public Criteria andTargetgroupNotBetween(String value1, String value2) {
            addCriterion("targetgroup not between", value1, value2, "targetgroup");
            return (Criteria) this;
        }

        public Criteria andStartchargeIsNull() {
            addCriterion("startcharge is null");
            return (Criteria) this;
        }

        public Criteria andStartchargeIsNotNull() {
            addCriterion("startcharge is not null");
            return (Criteria) this;
        }

        public Criteria andStartchargeEqualTo(Date value) {
            addCriterionForJDBCDate("startcharge =", value, "startcharge");
            return (Criteria) this;
        }

        public Criteria andStartchargeNotEqualTo(Date value) {
            addCriterionForJDBCDate("startcharge <>", value, "startcharge");
            return (Criteria) this;
        }

        public Criteria andStartchargeGreaterThan(Date value) {
            addCriterionForJDBCDate("startcharge >", value, "startcharge");
            return (Criteria) this;
        }

        public Criteria andStartchargeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("startcharge >=", value, "startcharge");
            return (Criteria) this;
        }

        public Criteria andStartchargeLessThan(Date value) {
            addCriterionForJDBCDate("startcharge <", value, "startcharge");
            return (Criteria) this;
        }

        public Criteria andStartchargeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("startcharge <=", value, "startcharge");
            return (Criteria) this;
        }

        public Criteria andStartchargeIn(List<Date> values) {
            addCriterionForJDBCDate("startcharge in", values, "startcharge");
            return (Criteria) this;
        }

        public Criteria andStartchargeNotIn(List<Date> values) {
            addCriterionForJDBCDate("startcharge not in", values, "startcharge");
            return (Criteria) this;
        }

        public Criteria andStartchargeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("startcharge between", value1, value2, "startcharge");
            return (Criteria) this;
        }

        public Criteria andStartchargeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("startcharge not between", value1, value2, "startcharge");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table room
     *
     * @mbggenerated do_not_delete_during_merge Tue Jan 13 16:05:47 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table room
     *
     * @mbggenerated Tue Jan 13 16:05:47 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}